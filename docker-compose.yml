version: '3.8'

services:
  app:
    build: .
    container_name: support-hours-app
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=support_hours
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SESSION_SECRET=your-secret-key-change-in-production
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm run dev

  db:
    image: postgres:15-alpine
    container_name: support-hours-db
    environment:
      - POSTGRES_DB=support_hours
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: support-hours-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data: